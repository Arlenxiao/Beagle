
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>@ViewData["Title"]</title>
    <link href="~/Template/lib/perfect-scrollbar/css/perfect-scrollbar.css" rel="stylesheet" />
    <link href="~/Template/lib/material-design-icons/css/material-design-iconic-font.css" rel="stylesheet" />
    <link href="~/Template/lib/datetimepicker/css/bootstrap-datetimepicker.css" rel="stylesheet" />
    <link href="~/Template/lib/sweetalert2/sweetalert2.min.css" rel="stylesheet" />
    <link href="~/Template/css/app.css" rel="stylesheet" />
    @RenderSection("css", required: false)

    <script src="~/Template/lib/jquery/jquery.js"></script>
    <script src="~/Template/lib/perfect-scrollbar/js/perfect-scrollbar.js"></script>
    <script src="~/Template/lib/bootstrap/dist/js/bootstrap.bundle.js"></script>
</head>
<body>
    @* be-collapsible-sidebar-collapsed *@
    @RenderBody()

    @if (DbRunTimeModule.Enable)
    {
        <div class="panel-footer" style="padding-bottom:45px;">
            @Html.Raw(DbRunTimeModule.GetInfo())
        </div>
    }
   
    <script src="~/Template/lib/datetimepicker/js/bootstrap-datetimepicker.js"></script>
    <script src="~/Template/lib/datetimepicker/js/locales/bootstrap-datetimepicker.zh-CN.js"></script>
    <script src="~/Template/js/app.js"></script>
    <script src="~/Template/lib/prettify/prettify.js"></script>
    <script src="~/Template/lib/sweetalert2/sweetalert2.all.min.js"></script>
    

    <script type="text/javascript">
        $(document).ready(function () {
            //-initialize the javascript
            App.init();

            //Runs prettify
            prettyPrint();
            $(".datetimepicker").datetimepicker({
                autoclose: true,
                componentIcon: '.mdi.mdi-calendar',
                navIcons: {
                    rightIcon: 'mdi mdi-chevron-right',
                    leftIcon: 'mdi mdi-chevron-left'
                }
            });

            //根据data-action的值确定操作类型 action为请求后端执行业务操作，url为直接跳转指定url地址
            //按钮请求action
            $(document).on('click',
                'button[data-action="action"], input[data-action="action"], a[data-action="action"]',
                function (e) {
                    $this = $(this);
                    //动态设置标签参数
                    var url = $this.attr('href');
                    var title = $this.attr('title');
                    if (url && url.length > 0) {
                        $this.data('url', url);
                        //$this.attr('href', 'javascript:void(0);');
                    }

                    //alert(url);
                    var confirm = $this.attr('data-confirm');
                    var cls = title == "删除" ? "modal-full-color modal-full-color-danger" : "";
                    swal({
                        title: title,
                        text: confirm,
                        confirmButtonText: '确定',
                        showCloseButton: true,
                        customClass: cls,
                        preConfirm: function () {
                            doClickAction($this);
                            return false;
                        }
                    });

                    //阻止按钮本身的事件冒泡
                    return false;
                });
        });


        function doClickAction($this) {
            var fields = $this.data('fields');
            //参数
            var parameter = '';
            if (fields && fields.length > 0) {
                var fieldArr = fields.split(',');
                for (var i = 0; i < fieldArr.length; i++) {
                    var detailArr = $('[name=' + fieldArr[i] + ']');
                    //不对name容器标签进行限制，直接进行序列化
                    //如果有特殊需求，可以再指定筛选器进行筛选
                    parameter += ((parameter.length > 0 ? '&' : '') + detailArr.serialize());
                }
            }

            //method
            var cmethod = $this.data('method');
            var method = 'GET';
            if (cmethod && cmethod.length > 0) {
                method = cmethod;
            }

            //url
            var curl = $this.data('url');
            if (!curl || curl.length <= 0) {
                if ($this[0].tagName == 'A') {
                    curl = $this.attr('href');
                }
            }
            doAction(method, curl, parameter);
        }

        //ajax请求 methodName 指定GET与POST
        function doAction(methodName, actionUrl, actionParamter) {
            if (!methodName || methodName.length <= 0 || !actionUrl || actionUrl.length <= 0) {
                tips('请求参数异常，请保证请求的地址跟参数正确！', 4, 1000);
                return;
            }

            $.ajax({
                url: actionUrl,
                type: methodName,
                async: false,
                dataType: 'json',
                data: actionParamter,
                error: function (ex) {
                    tips('请求异常！', 4, 1000);
                    //console.log(ex);
                },
                beforeSend: function () {
                    tips('正在操作中，请稍候...', 0, 2000);
                },
                success: function (s) {
                    //console.log(s);
                },
                complete: function (result) {
                    var rs = result.responseJSON;
                    if (rs.data && rs.data.length > 0) {
                        tips(rs.data, 1, 2000);
                    }
                    if (rs.url && rs.url.length > 0) {
                        setTimeout(function () {
                            if (rs.url == '[refresh]') {
                                //刷新页面但不重新加载页面的所有静态资源
                                location.reload(false);
                            } else {
                                window.location.href = rs.url;
                            }
                        }, 2000);
                        
                    }
                }
            });
        }

        function tips(title, index, time) {
            var cls = [
                "",
                "modal-full-color modal-full-color-success",
                "modal-full-color modal-full-color-primary",
                "modal-full-color modal-full-color-warning",
                "modal-full-color modal-full-color-danger",
                "modal-full-color modal-full-color-dark"
            ];
            swal({
                position: 'bottom-end',
                customClass: cls[index],
                title: title,
                showConfirmButton: false,
                timer: time,
            });  
        }

    </script>

    @RenderSection("scripts", required: false)
</body>
</html>
